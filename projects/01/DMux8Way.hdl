// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            {0, 0, in, 0, 0, 0, 0, 0} if sel == 010
 *                            {0, 0, 0, in, 0, 0, 0, 0} if sel == 011
 *                            {0, 0, 0, 0, in, 0, 0, 0} if sel == 100
 *                            {0, 0, 0, 0, 0, in, 0, 0} if sel == 101
 *                            {0, 0, 0, 0, 0, 0, in, 0} if sel == 110
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux(in=in, sel=sel[2], a=a1, b=b1); // a1 = in OR b1 = in otherwise 0 (half)

    DMux(in=a1, sel=sel[1], a=a2, b=b2); // both 0 if in is 0, a2 = in OR b2 = in (half of half)
    DMux(in=b1, sel=sel[1], a=a3, b=b3); // half of half

    DMux(in=a2, sel=sel[0], a=a, b=b);
    DMux(in=b2, sel=sel[0], a=c, b=d);
    DMux(in=a3, sel=sel[0], a=e, b=f);
    DMux(in=b3, sel=sel[0], a=g, b=h);

}